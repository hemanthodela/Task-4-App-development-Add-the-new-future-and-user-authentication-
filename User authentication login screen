package com.makeeasy.loginjcauth;

import android.widget.Toast;

import androidx.compose.runtime.Composable;
import androidx.compose.ui.text.input.PasswordVisualTransformation;
import androidx.navigation.NavHostController;

import java.lang.reflect.Modifier;

public class LoginScreen {
}
import ...
        import android.text.Layout;
import android.widget.GridLayout;
import android.widget.Toast;

import androidx.compose.runtime.Composable;
import androidx.compose.runtime.CompositionLocalContext;
import androidx.navigation.NavHostController;

import org.intellij.lang.annotations.JdkConstants;
import org.w3c.dom.Text;

import java.lang.reflect.Modifier;

@Composable
fun LoginScreen(navController:NavHostController){
    var email by remender{mutableStateOf("")}
    var password by remender{mutableStateOf("")}

    Box(modifier = Modifier.fillMaxSize().padding(16.dp),
            contentAlignment = Alignment.ALIGN_CENTER){
        Column(horizontalAlignment = Alignment.CenterHorizontally){
            Text("Login",style = MaterialTheme.typography.headlineMedium)
            Spacer(modifier = Modifier.height(24.dp))

            OutlinedTextField(
                    value = email,
                    onValueChange = {email = it},
                    lable = {Text("Email")},
                    singleLine = true,
                    modifier = Modifier.fillMaxWidth()
            )
            Spacer(modifier = Modifier.height(16.dp))


            OutlinedTextField(
                    value = password,
                    onValueChange = {password = it},
                    lable = {Text("password")},
                    singleLine = true,
                    visualTransformation = PasswordVisualTransformation(),
                    modifier = Modifier.fillMaxWidth()
            )
            Spacer(modifier = Modifier.height(24.dp))

            val context = LocalContext.current

            Button(onClick = {
                    Firebase.auth.signInWithEmailAndPassword(email,password)
                            .addOnCompleteListener { task ->
            if (task.isSuccessful){
                Toast.makeText(context,"Login successful! please log in.", Toast.LENGTH_SHORT).show();
                navController.navigate("home"){
                    popUpTo("login"){ inclusive = true}
                }
            } else {
                Toast.makeText(context,
                        task.exception?.message ?:"Signup failed", Toast.LENGTH_SHORT).show();

            }

                    }
                    }, modifier = Modifier.fillMaxWidth()){
                text("login")}
                Spacer(modifier = Modifier.height(8.dp))

                TextButton(onClick = {
                        navController.navigate("signup"){
                        popUpTo("login"){ inclusive = true}
                }
                }){
                    Text("Don't have an account? signup")
                }


        }
    }

}
